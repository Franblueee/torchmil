site_name: torchmil
site_description: torchmil is a PyTorch-based library for Multiple Instance Learning (MIL)
site_author: Fran Castro
site_url: !ENV READTHEDOCS_CANONICAL_URL

repo_url: https://github.com/Franblueee/torchmil
repo_name: Franblueee/torchmil
edit_uri: ""  # No edit button, as some of our pages are in /docs and some in /examples via symlink, so it's impossible for them all to be accurate

theme:
  name: material
  features:
    - navigation.sections  # Sections are included in the navigation on the left.
    - toc.integrate  # Table of contents is integrated on the left; does not appear separately on the right.
    # - header.autohide  # header disappears as you scroll
    - navigation.path
    - navigation.indexes
    - navigation.tabs
    - navigation.tabs.sticky

  palette:
    # Light mode / dark mode
    # We deliberately don't automatically use `media` to check a user's preferences. We default to light mode as
    # (a) it looks more professional, and (b) is more obvious about the fact that it offers a (dark mode) toggle.
    - scheme: default
      primary: white
      accent: amber
      toggle:
          icon: material/weather-night
          name: Switch to dark mode
    - scheme: slate
      primary: black
      accent: amber
      toggle:
          icon: material/weather-sunny
          name: Switch to light mode
  icon:
    repo: fontawesome/brands/github  # GitHub logo in top right
    logo: "material/abacus"  # Equinox logo in top left

  favicon: "_static/abacus.png"
  custom_dir: "docs/_overrides"  # Overriding part of the HTML

strict: True

extra_javascript:
  # The below two make MathJax work, see https://squidfunk.github.io/mkdocs-material/reference/mathjax/
  - _static/mathjax.js
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

extra_css:
  - _static/custom_css.css
  
markdown_extensions:
  - pymdownx.arithmatex:  # Render LaTeX via MathJax
      generic: true
  - pymdownx.superfences  # Seems to enable syntax highlighting when used with the Material theme.
  - pymdownx.details  # Allowing hidden expandable regions denoted by ???
  - pymdownx.snippets:  # Include one Markdown file into another
      base_path: docs
  - admonition
  - toc:
      # permalink: "Â¤"  # Adds a clickable permalink to each section heading
      toc_depth: 4

plugins:
  - search  # default search plugin; needs manually re-enabling when using any other plugins
  - autorefs  # Cross-links to headings
  - exclude:
      glob:
      - "_overrides"
      - "examples/pruebas/*"
  # - mkdocs-jupyter:  # Jupyter notebooks
  #     execute: true
  - mknotebooks:
      execute: False
  - mkdocstrings:
      # enabled: !ENV [ENABLE_MKDOCSTRINGS, true]
      # default_handler: python
      handlers:
        python:
          # setup_commands:
          #   - import pytkdocs_tweaks
          #   - pytkdocs_tweaks.main()
          #   - import jaxtyping
          #   - jaxtyping.set_array_name_format("array")
          #   - import jax
          #   - import jax.extend.core
          #   - jax.ShapeDtypeStruct.__module__ = "jax"
          #   - jax.extend.core.ClosedJaxpr.__module__ = "jax.extend.core"
          # selection:
          #   inherited_members: true  # Allow looking up inherited methods
          options:
            show_source: false  # don't include source code
            show_bases: true
            show_root_heading: true
            show_root_full_path: true  #
            inherited_members: true  # Allow looking up inherited methods
            show_if_no_docstring: false
            show_signature_annotations: false
            # members_order: source  # order methods according to their order of definition in the source code, not alphabetical order
            heading_level: 4
            docstring_section_style: list

nav:
  - Introduction:
    - index.md
  - Examples:
    - examples/index.md
    - Representing bags in torchmil: examples/data_representation.ipynb
    - Datasets in torchmil: examples/datasets.ipynb
    - Training your first MIL model: examples/training_your_first_mil_model.ipynb
    - WSI classification: examples/wsi_classification.ipynb
    - CT scan classification: examples/ctscan_classification.ipynb
    - Integrating torchmil with Graph Neural Networks (GNNs) frameworks: examples/gnns_integration.ipynb
  - API reference:
    - api/index.md
    - <tt>torchmil.data</tt>:
      - api/data/index.md
      - api/data/collate.md
      - api/data/representation.md
    - <tt>torchmil.datasets</tt>:
      - api/datasets/index.md
      - api/datasets/processed_mil_dataset.md
      - api/datasets/toy_dataset.md
      - api/datasets/ctscan_dataset.md
      - api/datasets/wsi_dataset.md
      - api/datasets/binary_classification_dataset.md
      - api/datasets/camelyon16mil_dataset.md
      - api/datasets/pandamil_dataset.md
      - api/datasets/rsnamil_dataset.md
      - api/datasets/false_frequency_dataset.md
      - api/datasets/mc_standard_dataset.md
      - api/datasets/sc_standard_dataset.md
    - <tt>torchmil.nn</tt>:
      - api/nn/index.md
      - Attention:
        - api/nn/attention/index.md
        - api/nn/attention/attention_pool.md
        - api/nn/attention/sm_attention_pool.md
        - api/nn/attention/prob_smooth_attention_pool.md
        - api/nn/attention/multihead_self_attention.md
        - api/nn/attention/irpe_multihead_self_attention.md
        - api/nn/attention/nystrom_attention.md
        - api/nn/attention/multihead_cross_attention.md
      - Graph Neural Networks (GNNs):
        - api/nn/gnns/index.md
        - api/nn/gnns/deepgcn.md
        - api/nn/gnns/gcn_conv.md
        - api/nn/gnns/dense_mincut_pool.md
      - Transformers:
        - api/nn/transformers/index.md
        - api/nn/transformers/base_transformer.md
        - api/nn/transformers/conventional_transformer.md
        - api/nn/transformers/sm_transformer.md
        - api/nn/transformers/nystrom_transformer.md
        - api/nn/transformers/irpe_transformer.md
        - api/nn/transformers/t2t.md
      - api/nn/sm.md
      - api/nn/mean_pool.md
      - api/nn/max_pool.md
    - <tt>torchmil.models</tt>:
      - api/models/index.md
      - api/models/mil_model.md
      - api/models/abmil.md
      - api/models/camil.md
      - api/models/clam.md
      - api/models/deepgraphsurv.md
      - api/models/dtfdmil.md
      - api/models/dsmil.md
      - api/models/gtp.md
      - api/models/iibmil.md
      - api/models/patch_gcn.md
      - api/models/prob_smooth_abmil.md
      - api/models/sm_abmil.md
      - api/models/sm_transformer_abmil.md
      - api/models/transformer_abmil.md
      - api/models/transformer_prob_smooth_abmil.md
      - api/models/transmil.md
      - api/models/setmil.md
      - api/models/iibmil.md
    - <tt>torchmil.visualize</tt>:
      - api/visualize/index.md
      - api/visualize/vis_ctscan.md
      - api/visualize/vis_wsi.md
    - <tt>torchmil.utils</tt>:
      - api/utils/index.md
      - api/utils/annealing_scheduler.md
      - api/utils/graph_utils.md
      - api/utils/trainer.md
